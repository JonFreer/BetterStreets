version: '3'
services:
  db:
    build: ./postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      API_DB: "api"
      API_DB_USER: "${API_DB_USERNAME}"
      API_DB_PASSWORD: "${API_DB_PASSWORD}"
    volumes:
      - "db_data:/var/lib/postgresql/data"

  web:
      build:
        context: ./web
        # target: prod
        args:
          REACT_APP_HOST: ${DOMAIN:-badlyparked.localhost}
      restart: unless-stopped
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.web.loadbalancer.server.port=80"
        - "traefik.http.routers.web.service=web"
        - "traefik.http.routers.web.rule=Host(`${DOMAIN:-badlyparked.co.uk}`)"
        - "traefik.http.routers.web.tls=true"
  api:
    # image: ghcr.io/hackthemidlands/htm-achievements/api:${TAG}
    build:
      context: ./api
      # target: prod
      # labels:
      #   org.opencontainers.image.title: achievements-api
      #   org.opencontainers.image.source: https://github.com/HackTheMidlands/htm-achievements
    restart: unless-stopped
    # depends_on:
    #   db:
    #     condition: service_healthy
    labels:
      # - "traefik.http.services.api.loadbalancer.server.port=80"
      # - "traefik.http.routers.api.service=api"
      # - "traefik.enable=true"
      # - "traefik.http.routers.api.tls=true"
      # - "traefik.http.routers.api.rule=Host(`api.${DOMAIN:-badlyparked.localhost}`)"
      # - "traefik.http.routers.api.middlewares=limit"
      # - "traefik.http.middlewares.limit.buffering.memRequestBodyBytes=8000000"
      # - "traefik.http.middlewares.testheader.headers.accesscontrolalloworigin=origin-list-or-null"
      - "traefik.enable=true"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.rule=Host(`${DOMAIN:-badlyparked.co.uk}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.middlewares=api-prefix@file"
    environment:
      DOMAIN: "${DOMAIN:-badlyparked.co.uk}"
      DATABASE_URL: "postgresql://${API_DB_USERNAME}:${API_DB_PASSWORD}@db/api"
      ADMIN_LIST: "${ADMIN_LIST}"
      SESSION_SECRET: "${SESSION_SECRET}"
      DISCORD_OAUTH_CLIENT_ID: "${DISCORD_OAUTH_CLIENT_ID}"
      DISCORD_OAUTH_CLIENT_SECRET: "${DISCORD_OAUTH_CLIENT_SECRET}"
      TWITTER_OAUTH_CLIENT_ID: "${TWITTER_OAUTH_CLIENT_ID}"
      TWITTER_OAUTH_CLIENT_SECRET: "${TWITTER_OAUTH_CLIENT_SECRET}"
      EXTERNAL_API_TOKEN: "${EXTERNAL_API_TOKEN}"

volumes:
  db_data: